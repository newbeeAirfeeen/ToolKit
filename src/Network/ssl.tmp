#ifndef SSL_ENABLE
tcp_server::tcp_server(){}
#else
using method = typename asio::ssl::context::method;
tcp_server::tcp_server():context(method::sslv23_server){
}
#endif

#ifdef SSL_ENABLE
    /*!
     * 加载pem证书文件。需要在start()方法调用前调用。
     * @param filename 文件路径(包含文件名)
     */
    void load_certificate(const std::string &filename);
    /*!
     * 加载pem私钥文件。需要在start()方法调用前调用
     * @param filename 文件路径(包含文件名)
     */
    void load_private_key_file(const std::string &filename);
    /*!
     * 设置客户端验证模式，需要在start()方法调用前调用
     * @param mode
     */
    void set_verify_mode(ssl_verify_mode mode);
#endif

#ifdef SSL_ENABLE
void tcp_server::load_certificate(const std::string& filename){
    return context->use_certificate_chain_file(filename);
}

void tcp_server::load_private_key_file(const std::string& filename){
    return context->use_private_key_file(filename, asio::ssl::context::pem);
}

void tcp_server::set_verify_mode(ssl_verify_mode mode){
    return context->set_verify_mode(mode);
}
#endif